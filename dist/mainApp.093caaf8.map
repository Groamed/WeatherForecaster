{"version":3,"sources":["mainJs/showModule.js","mainJs/dataModule.js","mainJs/httpDataModule.js","mainJs/staticDataModule.js","mainJs/mainApp.js"],"names":["ShowModule","seach","document","querySelector","weather","cityName","typeOfWeather","temperature","humidity","pressure","wind","prototype","setData","data","style","top","innerHTML","cityname","temp","speed","deg","DataModule","formData","rawData","name","main","HttpDataModule","call","url","city","Object","create","constructor","getWeather","Promise","resolve","reject","fetch","then","response","ok","json","Error","catch","error","bind","setGeoUrl","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","setInputUrl","value","StaticDataModule","weatherShow","weatherGet","onLine","ready","suggestions","debounce","cities","func","time","id","arg","clearTimeout","setTimeout","apply","text","ymaps","suggest","provider","items","remove","datalist","createElement","forEach","el","option","displayName","split","append","body","addEventListener","event","code","res","target","right","opacity","propertyName","bool"],"mappings":"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","file":"mainApp.093caaf8.map","sourceRoot":"..","sourcesContent":["export default function ShowModule() {\r\n    this.seach = document.querySelector('.seach-block')\r\n    this.weather = document.querySelector('.weather-block')\r\n    this.cityName = document.querySelector('.city-head')\r\n    this.typeOfWeather = document.querySelector(\".typeOfWeather\")\r\n    this.temperature = document.querySelector('.temperature')\r\n    this.humidity = document.querySelector('.humidity')\r\n    this.pressure = document.querySelector('.pressure')\r\n    this.wind = document.querySelector('.wind')\r\n}\r\n\r\nShowModule.prototype.setData = function (data) {\r\n    this.seach.style.top = '0px'\r\n    this.cityName.innerHTML = 'City Name: ' + data.cityname\r\n    this.typeOfWeather.innerHTML = 'Weather: ' + data.weather\r\n    this.temperature.innerHTML = 'Middle Temperature: ' + data.temp + '°C'\r\n    this.humidity.innerHTML = 'Humidity: ' + data.humidity + '%'\r\n    this.pressure.innerHTML = 'Pressure: ' + data.pressure + 'mmHg'\r\n    this.wind.innerHTML = `Wind: Speed: ${data.wind.speed} m/s, degree: ${data.wind.deg}°`\r\n}","export default function DataModule() {\r\n    this.data = {\r\n        cityname: '',\r\n        weather: '',\r\n        temp: '',\r\n        humidity: '',\r\n        pressure: '',\r\n        wind: { speed: '', deg: '' }\r\n    }\r\n}\r\n\r\nDataModule.prototype.formData = function (rawData) {\r\n    this.data.cityname = rawData.name\r\n    this.data.weather = rawData.weather[0].main\r\n    this.data.temp = rawData.main.temp\r\n    this.data.humidity = rawData.main.humidity\r\n    this.data.pressure = rawData.main.pressure\r\n    this.data.wind.speed = rawData.wind.speed\r\n    this.data.wind.deg = rawData.wind.deg\r\n    return this.data\r\n}","import DataModule from './dataModule'\r\n\r\nexport default function HttpDataModule() {\r\n    DataModule.call(this)\r\n    this.url = ''\r\n    this.city = document.querySelector('.city-input')\r\n}\r\n\r\nHttpDataModule.prototype = Object.create(DataModule.prototype)\r\nHttpDataModule.prototype.constructor = HttpDataModule\r\n\r\nHttpDataModule.prototype.getWeather = function () {\r\n    return new Promise(function (resolve, reject) {\r\n        fetch(this.url)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    resolve(response.json())\r\n                }\r\n                throw new Error('Failed to connect, please check you input')\r\n            })\r\n            .catch(error => { reject(`Failed, error ${error}`) })\r\n    }.bind(this))\r\n}\r\n\r\nHttpDataModule.prototype.setGeoUrl = function () {\r\n    return new Promise(function (resolve, reject) {\r\n        if (\"geolocation\" in navigator) {\r\n            navigator.geolocation.getCurrentPosition(position => {\r\n                this.url = `https://openweathermap.org/data/2.5/weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&appid=b6907d289e10d714a6e88b30761fae22`\r\n                resolve(true)\r\n\r\n            }, () => {\r\n                resolve(false)\r\n            })\r\n        } else {\r\n            resolve(false)\r\n        }\r\n    }.bind(this))\r\n}\r\n\r\nHttpDataModule.prototype.setInputUrl = function () {\r\n    if (this.city.value !== '')\r\n        this.url = `https://api.openweathermap.org/data/2.5/weather?q=${this.city.value}&units=metric&appid=930c1bbbbba989e24dd29e39a50af455`\r\n}","import DataModule from './dataModule'\r\n\r\nexport default function StaticDataModule() {\r\n    DataModule.call(this)\r\n}\r\n\r\nStaticDataModule.prototype = Object.create(DataModule.prototype)\r\nStaticDataModule.prototype.constructor = StaticDataModule\r\n\r\nStaticDataModule.prototype.getWeather = function () {\r\n    return new Promise(function (resolve, reject) {\r\n        fetch('../weatherFile.json')\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    resolve(response.json())\r\n                }\r\n                throw new Error('File does not exist')\r\n            })\r\n            .catch(error => { reject(`Failed, error ${error}`) })\r\n    }.bind(this))\r\n}","import ShowModule from './showModule'\r\nimport HttpDataModule from './httpDataModule'\r\nimport StaticDataModule from './staticDataModule'\r\n\r\nconst weatherShow = new ShowModule()\r\nconst weatherGet = navigator.onLine ? new HttpDataModule() : new StaticDataModule()\r\nlet ready = false;\r\nconst suggestions = debounce(cities, 1000)\r\n\r\nweatherShow.seach.addEventListener('keydown', event => {\r\n    if (event.code === 'Enter') {\r\n        weatherGet.setInputUrl()\r\n        weatherGet.getWeather()\r\n            .then(res => weatherGet.formData(res))\r\n            .then(data => weatherShow.setData(data))\r\n            .catch(error => { throw new Error(error) })\r\n    } else {\r\n        suggestions(event.target.value)\r\n    }\r\n})\r\n\r\nymaps.ready(() => {\r\n    ready = true;\r\n})\r\n\r\nweatherShow.seach.addEventListener('click', event => {\r\n    weatherShow.weather.style.right = '100%'\r\n    weatherShow.weather.style.opacity = '0'\r\n    weatherShow.seach.style.top = '100px'\r\n})\r\n\r\nweatherShow.seach.addEventListener('transitionend', event => {\r\n    if (event.target.style.top === '0px' && event.propertyName === 'top') {\r\n        weatherShow.weather.style.right = '0%'\r\n        weatherShow.weather.style.opacity = '1'\r\n    }\r\n})\r\n\r\nfunction debounce(func, time) {\r\n    let id\r\n    return function (...arg) {\r\n        if (id) {\r\n            clearTimeout(id)\r\n        }\r\n\r\n        id = setTimeout(() => {\r\n            func.apply(this, arg)\r\n            id = null\r\n        }, time)\r\n    }\r\n}\r\n\r\nfunction cities(text) {\r\n    if (text === '') {\r\n        return\r\n    }\r\n    if (ready) {\r\n        ymaps.suggest(text, { provider: 'yandex#search' })\r\n            .then(items => {\r\n                if (document.querySelector('#sug')) {\r\n                    document.querySelector('#sug').remove()\r\n                }\r\n                let datalist = document.createElement('datalist')\r\n                items.forEach(el => {\r\n                    let option = document.createElement('option')\r\n                    option.value = el.displayName.split(',')[0]\r\n                    datalist.append(option)\r\n                });\r\n                datalist.id = 'sug'\r\n                document.body.append(datalist)\r\n            })\r\n    }\r\n}\r\n\r\nweatherGet.setGeoUrl()\r\n    .then(bool => {\r\n        if (bool) {\r\n            return weatherGet.getWeather()\r\n        } else {\r\n            throw new Error('Geolocation rejected')\r\n        }\r\n    })\r\n    .then(res => weatherGet.formData(res))\r\n    .then(data => weatherShow.setData(data))\r\n    .catch(error => { throw new Error(error) })"]}